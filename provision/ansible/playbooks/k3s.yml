---
- hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      pause:
        seconds: 5
  tasks:
    - name: check if cluster already installed
      ansible.builtin.stat:
        path: "/etc/rancher/k3s/config.yaml"
      register: k3s_check_installed
      check_mode: false

    - name: set manifest facts 
      ansible.builtin.set_fact:
        k3s_server_manifests_templates: []
        k3s_server_manifests_urls: []
      when: k3s_check_installed.stat.exists

    - name: generate helper script on master
      
        template:
          src: templates/install_slave.j2
          dest: "/tmp/install_slave.sh"
          mode: '0770'
        when: main == 0
        delegate_to: "{{ bootstrap_master_name }}"

    - name: check if already installed
      stat:
        path: /usr/local/bin/k3s-uninstall.sh
      register: stat_result
        
    - name: run k3sup helper script for master
     
      shell: sh /tmp/install_master.sh
      when: main == 1 and stat_result.stat.exists == false
      register: output2
      delegate_to: localhost

    - name: run k3sup helper script for slave
      shell: "sh /tmp/install_slave.sh"
     
      when: main == 0 and stat_result.stat.exists == false
      register: output2
      delegate_to: "{{ bootstrap_master_name }}"

    - name: print output
      debug: 
        msg: "{{ output2 }}"

    - name: absolute path to git repo
    delegate_to: localhost

    run_once: true
    ansible.builtin.command: "git rev-parse --show-toplevel"
    register: repo_abs_path

    - name: copy kubeconfig to the provision folder
      run_once: true
      ansible.builtin.fetch:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "{{ repo_abs_path.stdout }}/provision/kubeconfig"
        flat: true
      when:
        - k3s_control_node is defined
        - k3s_control_node

    - name: update kubeconfig with the correct ip address 
      delegate_to: localhost
      run_once: true
      ansible.builtin.replace:
        path: "{{ repo_abs_path.stdout }}/provision/kubeconfig"
        regexp: "https://127.0.0.1:6443"
        replace: "https://{{ k3s_registration_address }}:6443"

    - name: Wait for k3s to finish installing the deployed manifests
      ansible.builtin.pause:
        seconds: 15

    - name: remove templates 
      ansible.builtin.file:
        path: "{{ k3s_server_manifests_dir }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
        state: absent
      loop: "{{ k3s_server_manifests_templates }}"
      when:
        - k3s_server_manifests_templates
        - k3s_server_manifests_templates | length > 0

    - name: remove manifest urls
      ansible.builtin.file:
        path: "{{ k3s_server_manifests_dir }}/{{ item.filename }}"
        state: absent
      loop: "{{ k3s_server_manifests_urls }}"
      when:
        - k3s_server_manifests_urls
        - k3s_server_manifests_urls | length > 0